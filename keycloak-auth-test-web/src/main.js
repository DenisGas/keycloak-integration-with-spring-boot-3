const backendUrl = "http://localhost:8081";
const frontendRedirectUri = "http://localhost:5173/callback";

// üîÅ –û—Ç—Ä–∏–º—É—î–º–æ code –∑ URL (–ø—ñ—Å–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—É –∑ Keycloak)
const authCode = new URL(window.location.href).searchParams.get("code");

document.addEventListener("DOMContentLoaded", () => {
  const loginBtn = document.getElementById("loginBtn");
  const logoutBtn = document.getElementById("logoutBtn");
  const getDataBtn = document.getElementById("getDataBtn");

  loginBtn.addEventListener("click", handleLogin);
  logoutBtn.addEventListener("click", handleLogout);
  getDataBtn.addEventListener("click", fullLogout);


  // –Ø–∫—â–æ —î "code" —É URL ‚Äî –æ–±–º—ñ–Ω—é—î–º–æ –π–æ–≥–æ –Ω–∞ —Ç–æ–∫–µ–Ω
  if (authCode) {
    exchangeAuthCode(authCode);
  } else {
    renderUI();
  }
});

function handleLogin(forceLogin = false) {
  const flag = localStorage.getItem("is_fullLogout");

  console.log(flag)
  if (flag === "true") {
    localStorage.setItem("is_fullLogout", "false");
    forceLogin = true;
  }

  const url = new URL(`${backendUrl}/api/v1/auth/login`);
  url.searchParams.set("redirect_uri", frontendRedirectUri);

  if (forceLogin === true) {
    url.searchParams.set("prompt", "true");
  }

  window.location.href = url.toString();
}

function fullLogout() {
 localStorage.setItem("is_fullLogout", true);
 handleLogout();
}

function handleLogout() {
  const token = localStorage.getItem("access_token");
  const idToken = localStorage.getItem("id_token");
  const logoutRedirect = "http://localhost:5173";

  if (!token || !idToken) {
    window.location.href = `${backendUrl}/api/v1/auth/logout?redirect_uri=${logoutRedirect}`;
    return;
  }

  fetch(
    `${backendUrl}/api/v1/auth/logout?redirect_uri=${logoutRedirect}&id_token_hint=${idToken}`,
    {
      method: "GET",
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }
  ).finally(() => {
    localStorage.removeItem("access_token");
    localStorage.removeItem("id_token");
    window.location.href = logoutRedirect;
  });
}

// üîÅ 3. –û–±–º—ñ–Ω –∫–æ–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –Ω–∞ access_token
function exchangeAuthCode(code) {
  fetch(`${backendUrl}/api/v1/auth/code`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      code,
      redirectUri: frontendRedirectUri, // –ò–°–ü–†–ê–í–õ–ï–ù–û: –±—ã–ª–æ redirect_uri, —Å—Ç–∞–ª–æ redirectUri
    }),
  })
    .then((res) => {
      if (!res.ok) {
        return res.json().then(errorData => {
          console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", errorData);
          throw new Error(`‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±–º—ñ–Ω—è—Ç–∏ code: ${errorData.error || res.statusText}`);
        });
      }
      return res.json();
    })
    .then((data) => {
      console.log("‚úÖ –¢–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã:", data);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
      localStorage.setItem("access_token", data.access_token);
      if (data.id_token) {
        localStorage.setItem("id_token", data.id_token);
      }

      window.history.replaceState({}, document.title, "/"); // –í–∏–¥–∞–ª—è—î–º–æ ?code= –∑ URL
      renderUI();
    })
    .catch((err) => {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±–º—ñ–Ω—É –∫–æ–¥—É:", err);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –æ—à–∏–±–∫—É
      alert(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${err.message}`);
      renderUI();
    });
}

function renderUI() {
  const token = localStorage.getItem("access_token");
  const idToken = localStorage.getItem("id_token");

  const loginBtn = document.getElementById("loginBtn");
  const logoutBtn = document.getElementById("logoutBtn");
  const getDataBtn = document.getElementById("getDataBtn");

  const hiBlock = document.getElementById("hi");
  const tokenBlock = document.getElementById("tokenBlock");
  const tokenValue = document.getElementById("tokenValue");

  if (token) {
    loginBtn.style.display = "none";
    logoutBtn.style.display = "inline-block";
    getDataBtn.style.display = "inline-block";

    hiBlock.style.display = "block";
    tokenBlock.style.display = "block";
    tokenValue.textContent = token;

    fetch(`${backendUrl}/api/v1/user/me`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    })
      .then((res) => {
        if (!res.ok) throw new Error("‚ùå –°–µ—Å—ñ—è –Ω–µ–¥—ñ–π—Å–Ω–∞");
        return res.json();
      })
      .then((d) => {
        let user = d.data;
        document.getElementById("username").textContent = " " + user.name;
        document.getElementById("email").textContent = user.email;
      })
      .catch((err) => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö:", err);
        localStorage.removeItem("access_token");
        localStorage.removeItem("id_token");
        hiBlock.style.display = "none";
        tokenBlock.style.display = "none";
        loginBtn.style.display = "inline-block";
        logoutBtn.style.display = "none";
        getDataBtn.style.display = "none";
      });
  } else {
    loginBtn.style.display = "inline-block";
    logoutBtn.style.display = "none";
    getDataBtn.style.display = "none";
    hiBlock.style.display = "none";
    tokenBlock.style.display = "none";
    tokenValue.textContent = "";
  }
}

document.getElementById("copyTokenBtn").addEventListener("click", () => {
  const token = document.getElementById("tokenValue").textContent;
  navigator.clipboard.writeText(token).then(() => {
    alert("‚úÖ –¢–æ–∫–µ–Ω —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!");
  });
});